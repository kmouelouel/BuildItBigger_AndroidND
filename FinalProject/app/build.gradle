apply plugin: 'com.android.application'
apply plugin: 'com.google.cloud.tools.endpoints-framework-client'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:1.0.2'
    }
}

android {

    signingConfigs {
        config {
            keyAlias 'update'
            keyPassword 'storekey1'
            storeFile file('C:/Term2AndroidNanadegreeUdacity/Project1_Gradle/ud867-master/FinalProject/upload-keystore.jks')
            storePassword 'storekey1'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "default"
    productFlavors {
        free {
            applicationId "com.udacity.gradle.builditbigger.free"
            dimension "default"
            minSdkVersion 16
            targetSdkVersion 28
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            versionCode 1
            versionName '1.0'
        }
        paid {
            applicationId "com.udacity.gradle.builditbigger.paid"
            dimension "default"
            minSdkVersion 16
            targetSdkVersion 28
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            versionCode 1
            versionName '1.0'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        free {
            res.srcDirs = ['src/free/res']
            java.srcDirs = ['src/free/java']
        }
        paid {
            res.srcDirs = ['src/paid/res']
            java.srcDirs = ['src/paid/java']
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    endpointsServer project(path: ':backend', configuration: 'endpoints')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    freeImplementation 'com.google.android.gms:play-services-ads:17.1.3'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.http-client:google-http-client-android:1.23.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation project(path: ':javaJoker')
    implementation project(':androidjokes')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:mediarouter-v7:28.0.0'
}
